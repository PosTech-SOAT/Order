name: Build, Test, and Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t santanarael/order-fiap:latest --push .

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          chmod +x kubectl
          mkdir -p ~/.local/bin
          mv ./kubectl ~/.local/bin/kubectl

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo "${{ secrets.AWS_CREDENTIALS }}" > ~/.aws/credentials
          chmod 600 ~/.aws/credentials

      - name: Update kubeconfig
        run: |
          aws eks --region us-east-1 update-kubeconfig --name cluster-terraform

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
          sleep 10s
          kubectl apply -f k8s/postgres-deployment.yaml
          sleep 20s
          kubectl apply -f k8s/order-deployment.yaml
          sleep 10s
          kubectl apply -f k8s/order-hpa.yaml
          echo "http://$(kubectl get svc order-service -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}'):33333/api/orders"
          
      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            nc -z postgres-service 5432 && echo "PostgreSQL is up" && break || echo "Waiting for PostgreSQL..." && sleep 10;
          done
          
      - name: Run migration
        run: npm run migration:run
        env:
          DB_HOST: "$(kubectl get svc order-service -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}')"
          DB_PORT: "5432"
          DB_USER: root
          DB_PASS: root
          DB_NAME: postech
